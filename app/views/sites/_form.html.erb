<style>
  /* Always set the map height explicitly to define the size of the div
   * element that contains the map. */
  #map {
    height: 100%;
  }
  /* Optional: Makes the sample page fill the window. */
  html, body {
    height: 100%;
    margin: 0;
    padding: 0;
  }
  .controls {
    margin-top: 10px;
    border: 1px solid transparent;
    border-radius: 2px 0 0 2px;
    box-sizing: border-box;
    -moz-box-sizing: border-box;
    height: 32px;
    outline: none;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.3);
  }

  #pac-input {
    background-color: #fff;
    font-family: Roboto;
    font-size: 15px;
    font-weight: 300;
    margin-left: 12px;
    padding: 0 11px 0 13px;
    text-overflow: ellipsis;
    width: 300px;
  }

  #pac-input:focus {
    border-color: #4d90fe;
  }

  .pac-container {
    font-family: Roboto;
  }

  #type-selector {
    color: #fff;
    background-color: #4d90fe;
    padding: 5px 11px 0px 11px;
  }

  #type-selector label {
    font-family: Roboto;
    font-size: 13px;
    font-weight: 300;
  }
  #target {
    width: 345px;
  }
</style>
<script>
  // This example adds a search box to a map, using the Google Place Autocomplete
  // feature. People can enter geographical searches. The search box will return a
  // pick list containing a mix of places and predicted search terms.

  // This example requires the Places library. Include the libraries=places
  // parameter when you first load the API. For example:
  // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">

  function initAutocomplete() {
    var map = new google.maps.Map(document.getElementById('map'), {
      center: {lat: 14.079367, lng: 100.6096085},
      zoom: 13,
      mapTypeId: 'roadmap'
    });
    google.maps.event.addListener(map, 'click', function(event) {
      //document.getElementById("lat").value = event.latLng.lat();
      //document.getElementById("long").value = event.latLng.lng();
      var icon = {
        size: new google.maps.Size(71, 71),
        origin: new google.maps.Point(0, 0),
        anchor: new google.maps.Point(17, 34),
        scaledSize: new google.maps.Size(25, 25)
      };

      // Create a marker for each place.
      markers.push(new google.maps.Marker({
        map: map,
        icon: icon,
        title: event.name,
        position: event.latLng
      }));
    });
    // Create the search box and link it to the UI element.
    var input = document.getElementById('pac-input');
    var searchBox = new google.maps.places.SearchBox(input);
    map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

    // Bias the SearchBox results towards current map's viewport.
    map.addListener('bounds_changed', function() {
      searchBox.setBounds(map.getBounds());
    });

    var markers = [];
    // Listen for the event fired when the user selects a prediction and retrieve
    // more details for that place.
    searchBox.addListener('places_changed', function() {
      var places = searchBox.getPlaces();

      if (places.length == 0) {
        return;
      }

      // Clear out the old markers.
      markers.forEach(function(marker) {
        marker.setMap(null);
      });
      markers = [];

      // For each place, get the icon, name and location.
      var bounds = new google.maps.LatLngBounds();
      places.forEach(function(place) {
        if (!place.geometry) {
          console.log("Returned place contains no geometry");
          return;
        }
        var icon = {
          url: place.icon,
          size: new google.maps.Size(71, 71),
          origin: new google.maps.Point(0, 0),
          anchor: new google.maps.Point(17, 34),
          scaledSize: new google.maps.Size(25, 25)
        };

        // Create a marker for each place.
        markers.push(new google.maps.Marker({
          map: map,
          icon: icon,
          title: place.name,
          position: place.geometry.location
        }));
        document.getElementById('site_name').value=place.name;
        document.getElementById('site_address').value=place.formatted_address;
        var adrComponents = place.address_components;
        document.getElementById('site_districs').value= adrComponents[0].long_name;
        document.getElementById('site_city').value=adrComponents[2].long_name;
        document.getElementById('site_postalcode').value=adrComponents[4].long_name;
        document.getElementById('site_Long').value=place.geometry.location.lng();
        document.getElementById('site_Lat').value=place.geometry.location.lat();
        if (place.geometry.viewport) {
          // Only geocodes have viewport.
          bounds.union(place.geometry.viewport);
        } else {
          bounds.extend(place.geometry.location);
        }
      });
      map.fitBounds(bounds);
    });
  }

</script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAyxD49sJePDuiXFWSMxlykH-z6x-Ki5qg&libraries=places&callback=initAutocomplete"
        async defer></script>
<div class="modal-body row">
  <div class="col-md-6">
    <%= form_for(@site) do |f| %>
        <% if @site.errors.any? %>
            <div id="error_explanation">
              <h2><%= pluralize(@site.errors.count, "error") %> prohibited this site from being saved:</h2>

              <ul>
                <% @site.errors.full_messages.each do |message| %>
                    <li><%= message %></li>
                <% end %>
              </ul>
            </div>
        <% end %>
        <div class="modal-content">
          <% if current_page?(new_site_path) %>
              <h2><span class="label label-success label-block">New Site</span></h2>
          <% else %>
              <h2><span class="label label-warning label-block">Edit Site</span></h2>
          <% end %>
          <div class="modal-header" align="center">
            <img class="img" id="img_logo" src="/assets/batch_batch_site.jpg">
            </button>
          </div>
          <div id="div-forms">
            <form id="login-form">
              <div class="modal-body">
                <%= f.label :name, class: 'text-login-msg' %><br>
                <%= f.text_field :name, class: 'form-control' %>
                <div style="line-height:110%;">
                  <br>
                </div>
                <%= f.label :address, class: 'text-login-msg' %><br>
                <%= f.text_field :address, class: 'form-control' %>
                <div class="checkbox">
                </div>
                <%= f.label :districs, class: 'text-login-msg' %><br>
                <%= f.text_field :districs, class: 'form-control' %>
                <div class="checkbox">
                </div>
                <%= f.label :city, class: 'text-login-msg' %><br>
                <%= f.text_field :city, class: 'form-control' %>
                <div class="checkbox">
                </div>
                <%= f.label :postalcode, class: 'text-login-msg' %><br>
                <%= f.text_field :postalcode, class: 'form-control' %>
                <div class="checkbox">
                </div>
                <%= f.text_field :Long, class: 'form-control hide' %>
                <div class="checkbox">
                </div>
                <%= f.text_field :Lat, class: 'form-control hide' %>
                <div class="checkbox">
                </div>
              </div>
              <div class="modal-footer">
                <div class="actions">
                  <%= f.submit 'Submit', :class => 'btn btn-primary ' %>
                  <%= link_to 'Back', sites_path, :class => 'btn btn-default ' %>
                </div>
                <div>
                </div>
                <div>
                </div>
              </div>
            </form>
          </div>
        </div>
    <% end %>
  </div>
  <div class="col-md-6"><br />
    <input id="pac-input" class="controls" type="text" placeholder="Search Box">
    <div id="map" style="width:900px;height:580px"/>
  </div>

</div>

